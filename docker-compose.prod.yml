services:
  postgres:
    image: postgres:17
    container_name: kicau-postgres
    restart: always
    environment:
      - POSTGRES_USER=kicau_user
      - POSTGRES_PASSWORD=kicau_password
      - POSTGRES_DB=kicau_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    networks:
      - kicau-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kicau_user -d kicau_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  nestjs-backend:
    build:
      context: ./Backend/web-service
      dockerfile: Dockerfile
      target: production
    container_name: kicau-nestjs
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://kicau_user:kicau_password@postgres:5432/kicau_db?schema=public
      - PYTHON_BACKEND_URL=http://python-backend:8000
      - NODE_ENV=production
    networks:
      - kicau-network
    restart: unless-stopped

  python-backend:
    build:
      context: ./Backend/inference-service
      dockerfile: Dockerfile
      target: production
    container_name: kicau-python
    environment:
      - DATABASE_URL=postgresql://kicau_user:kicau_password@postgres:5432/kicau_db
      - ENVIRONMENT=production
    networks:
      - kicau-network
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy

  frontend:
    build:
      context: ./Frontend
      dockerfile: Dockerfile
      target: production
    container_name: kicau-frontend
    networks:
      - kicau-network
    restart: unless-stopped
    depends_on:
      - nestjs-backend
      - python-backend
    environment:
      - VITE_API_URL=/api

  nginx-proxy:
    image: nginx:alpine
    container_name: kicau-nginx-proxy
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx-proxy.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - nestjs-backend
      - python-backend
    networks:
      - kicau-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  kicau-network:
    driver: bridge
