services:
  postgres:
    image: postgres:17
    container_name: kicau-postgres
    restart: always
    environment:
      - POSTGRES_USER=kicau_user
      - POSTGRES_PASSWORD=kicau_password
      - POSTGRES_DB=kicau_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    ports:
      - '5432:5432'
    networks:
      - kicau-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kicau_user -d kicau_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  nestjs-backend:
    build:
      context: ./Backend/web-service
      dockerfile: Dockerfile
      target: production
    container_name: kicau-nestjs
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://kicau_user:kicau_password@postgres:5432/kicau_db?schema=public
      - PYTHON_BACKEND_URL=http://python-backend:8000
      - NODE_ENV=development
    ports:
      - '3000:3000'
    networks:
      - kicau-network
    restart: unless-stopped
    volumes:
      - ./Backend/web-service:/app
      - /app/node_modules

  python-backend:
    build:
      context: ./Backend/inference-service
      dockerfile: Dockerfile
      target: production
    container_name: kicau-python
    environment:
      - DATABASE_URL=postgresql://kicau_user:kicau_password@postgres:5432/kicau_db
      - ENVIRONMENT=development
    ports:
      - '8000:8000'
    networks:
      - kicau-network
    restart: unless-stopped
    volumes:
      - ./Backend/inference-service:/app
    depends_on:
      postgres:
        condition: service_healthy

  frontend:
    build:
      context: ./Frontend
      dockerfile: Dockerfile
      target: production
    container_name: kicau-frontend
    ports:
      - '5173:80'
    networks:
      - kicau-network
    restart: unless-stopped
    depends_on:
      - nestjs-backend
      - python-backend
    environment:
      - VITE_API_URL=http://localhost:3000
      - VITE_PYTHON_API_URL=http://localhost:8000

volumes:
  postgres_data:

networks:
  kicau-network:
    driver: bridge
